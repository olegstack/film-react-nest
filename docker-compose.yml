version: "3.9"

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: postgres_prac
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: prac
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - prac_net

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_prac
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - prac_net

  # Backend
  backend:
    image: ghcr.io/olegstack/film-react-nest-backend:latest
    container_name: backend_prac
    restart: unless-stopped
    env_file:
      - ./backend/.env
    networks:
      - prac_net
    depends_on:
      - postgres

  # Frontend 
  frontend:
    image: ghcr.io/olegstack/film-react-nest-frontend:latest
    container_name: frontend_prac
    restart: unless-stopped
    volumes:
      - react_build:/usr/share/nginx/html
    networks:
      - prac_net

  # Nginx
  nginx:
    image: ghcr.io/olegstack/film-react-nest-nginx:latest
    container_name: nginx_prac
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - react_build:/usr/share/nginx/html
    networks:
      - prac_net

# Общие сети 
networks:
  prac_net:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  react_build:
